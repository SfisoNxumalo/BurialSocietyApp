/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ithembaroh;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.Statement;
import javax.swing.JOptionPane;

/**
 *
 * @author Sfiso
 */
public class frmCreateAccount extends javax.swing.JFrame {

    /**
     * Creates new form frmCreateAccount
     */
    public frmCreateAccount() {
        initComponents();
    }
    
    CaesarCipher caesarCipher = new CaesarCipher();
    String strUsername;
    String strPassword;
    String strRetypePassword;
    Boolean boolRecordExists = false;
    
    private void mEncryptPassword()
    {
        strPassword = caesarCipher.mEncrypt(txtPassword.getText(), 10);
    }

    private void mGetValuesFromGUI()
    {
        strUsername = txtUsername.getText();
        strPassword = txtPassword.getText();
        strRetypePassword = txtRetypePassword.getText();
    }
    
    private void mSetValuesToUpperCase()
    {
        strUsername = strUsername.toUpperCase();       
    }
    
    private void mcheckIfITemsExistInTable()    //cchecks if data already exists
    {
        String strDBConnectionString = "jdbc:mysql://localhost:3306/burial_society_db";
        String strDBUser = "root";
        String strDBPassword = "WeWillMakeIt@Life";
        
        Connection conMySQLConnectionString;
        Statement stStatement = null;
        ResultSet rs = null;
        
        try
        {
            conMySQLConnectionString = DriverManager.getConnection(strDBConnectionString, strDBUser, strDBPassword);
            stStatement = conMySQLConnectionString.createStatement();
            String strQuery = "SELECT username, password FROM users_login "
                            + "WHERE username = " + "'" + strUsername + "'" + "AND password = " + "'" + strPassword + "'";
            stStatement.execute(strQuery);
            rs = stStatement.getResultSet();
            boolRecordExists = rs.next();
        }
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(rootPane, e);
        }
        finally
        {
            try
            {
                stStatement.close();
            }
            catch(Exception e)
            {
                JOptionPane.showMessageDialog(rootPane, "Conection string not closed " + e);
            }
        }
    }
    
    private void mCreateAccount() //creates and saved new accout data to the database.
    {
        String URL = "jdbc:mysql://localhost:3306/burial_society_db";
        String User = "root";
        String Password = "WeWillMakeIt@Life";
              
        try
        {
            Connection conMySQLConnectionString = DriverManager.getConnection(URL, User, Password);
            Statement myStatement = conMySQLConnectionString.createStatement();
            String strInsert = "INSERT INTO users_login (role, username, password)"
                             + " VALUES('USER/CLIENT'" + ", " + "'" + strUsername + "'" + ", " + "'" + strPassword + "'" + ")";
            myStatement.execute(strInsert);
            
            myStatement.close();
            JOptionPane.showMessageDialog(rootPane, "Account successfully created, \nLogin with your created details");
            
            frmLogin frmL = new frmLogin();
            frmL.show();
            this.dispose();
            
        }
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(rootPane, e);
        }
    }
    
    private void mClearText()
    {
        txtUsername.setText("");
        txtPassword.setText("");
        txtRetypePassword.setText("");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlBackground = new javax.swing.JPanel();
        lblTitle = new javax.swing.JLabel();
        pnlUsername = new javax.swing.JPanel();
        lblUsername = new javax.swing.JLabel();
        txtUsername = new javax.swing.JTextField();
        pnlPassword = new javax.swing.JPanel();
        lblPassword = new javax.swing.JLabel();
        txtPassword = new javax.swing.JTextField();
        pnlRetypePassword = new javax.swing.JPanel();
        lblRetypePassword = new javax.swing.JLabel();
        txtRetypePassword = new javax.swing.JTextField();
        btnCancel = new javax.swing.JButton();
        btnCreate = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("CREATE AN ACCOUNT");

        pnlBackground.setBackground(new java.awt.Color(102, 153, 255));

        lblTitle.setFont(new java.awt.Font("SansSerif", 2, 36)); // NOI18N
        lblTitle.setForeground(new java.awt.Color(255, 255, 255));
        lblTitle.setText("Set Up An Account");

        pnlUsername.setBackground(new java.awt.Color(51, 102, 255));

        lblUsername.setFont(new java.awt.Font("Consolas", 0, 24)); // NOI18N
        lblUsername.setForeground(new java.awt.Color(255, 255, 255));
        lblUsername.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblUsername.setText("Username:");
        lblUsername.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        lblUsername.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        txtUsername.setFont(new java.awt.Font("Montserrat", 0, 14)); // NOI18N
        txtUsername.setToolTipText("Enter your username");
        txtUsername.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));

        javax.swing.GroupLayout pnlUsernameLayout = new javax.swing.GroupLayout(pnlUsername);
        pnlUsername.setLayout(pnlUsernameLayout);
        pnlUsernameLayout.setHorizontalGroup(
            pnlUsernameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlUsernameLayout.createSequentialGroup()
                .addGap(3, 3, 3)
                .addComponent(lblUsername)
                .addGap(0, 0, 0)
                .addComponent(txtUsername, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        pnlUsernameLayout.setVerticalGroup(
            pnlUsernameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlUsernameLayout.createSequentialGroup()
                .addGap(1, 1, 1)
                .addComponent(lblUsername, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addComponent(txtUsername, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pnlPassword.setBackground(new java.awt.Color(51, 102, 255));
        pnlPassword.setPreferredSize(new java.awt.Dimension(298, 25));

        lblPassword.setFont(new java.awt.Font("Consolas", 0, 24)); // NOI18N
        lblPassword.setForeground(new java.awt.Color(255, 255, 255));
        lblPassword.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblPassword.setText("Password:");
        lblPassword.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        lblPassword.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        txtPassword.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        txtPassword.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));

        javax.swing.GroupLayout pnlPasswordLayout = new javax.swing.GroupLayout(pnlPassword);
        pnlPassword.setLayout(pnlPasswordLayout);
        pnlPasswordLayout.setHorizontalGroup(
            pnlPasswordLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlPasswordLayout.createSequentialGroup()
                .addGap(3, 3, 3)
                .addComponent(lblPassword)
                .addGap(0, 0, 0)
                .addComponent(txtPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        pnlPasswordLayout.setVerticalGroup(
            pnlPasswordLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlPasswordLayout.createSequentialGroup()
                .addGap(2, 2, 2)
                .addComponent(lblPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addComponent(txtPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pnlRetypePassword.setBackground(new java.awt.Color(51, 102, 255));
        pnlRetypePassword.setPreferredSize(new java.awt.Dimension(298, 25));

        lblRetypePassword.setFont(new java.awt.Font("Consolas", 0, 24)); // NOI18N
        lblRetypePassword.setForeground(new java.awt.Color(255, 255, 255));
        lblRetypePassword.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblRetypePassword.setText("Retype Password:");
        lblRetypePassword.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        lblRetypePassword.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        txtRetypePassword.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        txtRetypePassword.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));

        javax.swing.GroupLayout pnlRetypePasswordLayout = new javax.swing.GroupLayout(pnlRetypePassword);
        pnlRetypePassword.setLayout(pnlRetypePasswordLayout);
        pnlRetypePasswordLayout.setHorizontalGroup(
            pnlRetypePasswordLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlRetypePasswordLayout.createSequentialGroup()
                .addGap(3, 3, 3)
                .addComponent(lblRetypePassword)
                .addGap(0, 0, 0)
                .addComponent(txtRetypePassword, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        pnlRetypePasswordLayout.setVerticalGroup(
            pnlRetypePasswordLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlRetypePasswordLayout.createSequentialGroup()
                .addGap(2, 2, 2)
                .addComponent(lblRetypePassword, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addComponent(txtRetypePassword, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        btnCancel.setFont(new java.awt.Font("Comic Sans MS", 0, 18)); // NOI18N
        btnCancel.setForeground(new java.awt.Color(255, 51, 51));
        btnCancel.setText("Cancel");
        btnCancel.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        btnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelActionPerformed(evt);
            }
        });

        btnCreate.setFont(new java.awt.Font("Comic Sans MS", 0, 18)); // NOI18N
        btnCreate.setForeground(new java.awt.Color(0, 51, 255));
        btnCreate.setText("Create");
        btnCreate.setBorder(javax.swing.BorderFactory.createEtchedBorder(new java.awt.Color(255, 255, 255), null));
        btnCreate.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnCreate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCreateActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlBackgroundLayout = new javax.swing.GroupLayout(pnlBackground);
        pnlBackground.setLayout(pnlBackgroundLayout);
        pnlBackgroundLayout.setHorizontalGroup(
            pnlBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlBackgroundLayout.createSequentialGroup()
                .addGroup(pnlBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlBackgroundLayout.createSequentialGroup()
                        .addGap(90, 90, 90)
                        .addComponent(lblTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 313, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pnlBackgroundLayout.createSequentialGroup()
                        .addGap(31, 31, 31)
                        .addComponent(pnlRetypePassword, javax.swing.GroupLayout.PREFERRED_SIZE, 389, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pnlBackgroundLayout.createSequentialGroup()
                        .addGap(82, 82, 82)
                        .addGroup(pnlBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(pnlPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(pnlUsername, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(31, Short.MAX_VALUE))
            .addGroup(pnlBackgroundLayout.createSequentialGroup()
                .addGap(98, 98, 98)
                .addComponent(btnCreate, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnCancel, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(75, 75, 75))
        );
        pnlBackgroundLayout.setVerticalGroup(
            pnlBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlBackgroundLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblTitle)
                .addGap(35, 35, 35)
                .addComponent(pnlUsername, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addComponent(pnlPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addComponent(pnlRetypePassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(35, 35, 35)
                .addGroup(pnlBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnCancel, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnCreate, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(35, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlBackground, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlBackground, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnCreateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCreateActionPerformed
mGetValuesFromGUI();
        
if(strUsername.isBlank())
{
    JOptionPane.showMessageDialog(rootPane, "Enter username");
}
else if(strPassword.isBlank())
{
    JOptionPane.showMessageDialog(rootPane, "Enter password");
}
else if(strRetypePassword.isBlank())
{
    JOptionPane.showMessageDialog(rootPane, "Retype password");
}
else
{
    if(!strPassword.equals(strRetypePassword))
    {
        JOptionPane.showMessageDialog(rootPane, "Passwords don't match");
    }
    else
    {
        mSetValuesToUpperCase();
        mcheckIfITemsExistInTable();
    
        if(boolRecordExists == true)
        {
            boolRecordExists = false;
            JOptionPane.showMessageDialog(rootPane, "Account already exists");
        }
        else if(boolRecordExists == false)
        {
            mEncryptPassword();
            mCreateAccount();
            mClearText();
        }
    }
    
    
    
}// TODO add your handling code here:
    }//GEN-LAST:event_btnCreateActionPerformed

    private void btnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelActionPerformed
    frmLogin frmL = new frmLogin();
    frmL.show();
    this.dispose();        // TODO add your handling code here:
    }//GEN-LAST:event_btnCancelActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(frmCreateAccount.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(frmCreateAccount.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(frmCreateAccount.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(frmCreateAccount.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new frmCreateAccount().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancel;
    private javax.swing.JButton btnCreate;
    private javax.swing.JLabel lblPassword;
    private javax.swing.JLabel lblRetypePassword;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JLabel lblUsername;
    private javax.swing.JPanel pnlBackground;
    private javax.swing.JPanel pnlPassword;
    private javax.swing.JPanel pnlRetypePassword;
    private javax.swing.JPanel pnlUsername;
    private javax.swing.JTextField txtPassword;
    private javax.swing.JTextField txtRetypePassword;
    private javax.swing.JTextField txtUsername;
    // End of variables declaration//GEN-END:variables
}
